name: Publish Render & Meshes

on:
  push:
    branches:
      - master

jobs:
  # json to matrix
  yaml_to_json:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Yaml to Json
        run: |
          /bin/bash scripts/matrix.sh
      - name: Set matrix data
        id: set-matrix
        run: |
          echo "matrix=$(jq -c . < ./config.json)" >> $GITHUB_OUTPUT

  loop:
    runs-on: ubuntu-latest
    needs: yaml_to_json
    strategy:
      matrix: ${{ fromJson(needs.yaml_to_json.outputs.matrix) }}
    env:
      ORG_NAME: ${{ github.repository_owner }}
      DEPLOY_TOKEN: ${{ secrets[format('DEPLOY_TOKEN_{0}', matrix.OWNER_UPPERCASE)] }}
      TEMPLATE_TOKEN: ${{ secrets[format('DEPLOY_TOKEN_{0}', matrix.template_owner)] }}
    steps:
      - name: Set deployment environment based on matrix name
        run: |
          export DEPLOY_TOKEN="${{ secrets[format('DEPLOY_TOKEN_{0}', matrix.OWNER_UPPERCASE)] }}"
        shell: bash
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create Repo if not exists
        env:
          OWNER: ${{ matrix.owner }}
          TEMPLATE: ${{ matrix.template }}
          REPO: ${{ matrix.repo }}
          PRIVATE: ${{ matrix.private }}
        run: /bin/bash scripts/createRepo.sh 
      - name: add-secrets
        uses: gliech/create-github-secret-action@v1
        with:
          location: ${{ matrix.repopath }}
          name: DEPLOY_TOKEN
          value: ${{ env.DEPLOY_TOKEN }}
          pa_token: ${{ env.DEPLOY_TOKEN }}
      - name: Clone remote repository
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repopath }} ## full path
          path: "tmp-${{ matrix.repo }}" # single str
          ref: master
          token: ${{ env.DEPLOY_TOKEN }}
      - name: sync from local dir
        run: |
          if [ -d "${{ matrix.dir }}" ]; then
            mkdir -p "tmp-${{ matrix.repo }}/${{ matrix.dir }}/${{ env.ORG_NAME}}/${{ matrix.name }}/"
            rsync -av "${{ matrix.dir }}/" "tmp-${{ matrix.repo }}/${{ matrix.dir }}/${{ env.ORG_NAME}}/${{ matrix.name }}/"
          else
            echo "Directory '${{ matrix.dir }}' does not exist."
            #exit 1
          fi
      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ env.DEPLOY_TOKEN }}
          SOURCE_DIR: "tmp-${{ matrix.repo }}"
        with:
          source-directory: ${{ env.SOURCE_DIR }}
          #destination-github-username: ${{ github.repository_owner }}
          destination-github-username: ${{ matrix.owner }}
          destination-repository-name: ${{ matrix.repo }}
          user-email: "github-actions[bot]@users.noreply.github.com"
          target-branch: master
